- name: Check all masters are node or not
  set_fact:
    masters_are_not_tainted: "{{ groups['kube-node'] | intersect(groups['kube-master']) == groups['kube-master'] }}"

- name: Kube State Metrics | Delete addon dir
  file:
    path: "{{ kube_config_dir }}/addons/kube_state_metrics"
    state: absent
  when:
    - inventory_hostname == groups['kube-master'][0]
  tags:
    - upgrade

- name: Kube State Metrics | Create addon dir
  file:
    path: "{{ kube_config_dir }}/addons/kube_state_metrics"
    state: directory
    owner: root
    group: root
    mode: 0755
  when:
    - inventory_hostname == groups['kube-master'][0]

- name: Kube State Metrics | Templates list
  set_fact:
    kube_state_metrics_templates:
      - {
          name: kube-state-metrics-cluster-role-binding,
          file: kube-state-metrics-cluster-role-binding.yaml,
          type: clusterrolebinding,
        }
      - {
          name: kube-state-metrics-cluster-role,
          file: kube-state-metrics-cluster-role.yaml,
          type: cr,
        }
      - {
          name: kube-state-metrics-service-account,
          file: kube-state-metrics-service-account.yaml,
          type: sa,
        }
      - {
          name: kube-state-metrics-deployment,
          file: kube-state-metrics-deployment.yaml,
          type: deploy,
        }
      - {
          name: kube-state-metrics-service,
          file: kube-state-metrics-service.yaml,
          type: service,
        }

- name: Kube State Metrics | Create manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kube_config_dir }}/addons/kube_state_metrics/{{ item.file }}"
  with_items: "{{ kube_state_metrics_templates }}"
  register: kube_state_metrics_manifests
  when:
    - inventory_hostname == groups['kube-master'][0]

- name: Kube State Metrics | Apply manifests
  kube:
    name: "{{ item.item.name }}"
    kubectl: "{{ bin_dir }}/kubectl"
    resource: "{{ item.item.type }}"
    filename: "{{ kube_config_dir }}/addons/kube_state_metrics/{{ item.item.file }}"
    state: "latest"
  with_items: "{{ kube_state_metrics_manifests.results }}"
  when:
    - inventory_hostname == groups['kube-master'][0]
